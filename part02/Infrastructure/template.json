{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "IotHubs_ioh_dd_comma_test_connectionString": {
            "type": "SecureString"
        },
        "IotHubs_ioh_dd_comma_test_containerName": {
            "type": "SecureString"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "sites_fapp_dd_cs_test_name": {
            "defaultValue": "fapp-dd-cs-test",
            "type": "String"
        },
        "workflows_lapp_dd_cs_test_name": {
            "defaultValue": "lapp-dd-cs-test",
            "type": "String"
        },
        "serverfarms_ASP_rgcomma_add6_name": {
            "defaultValue": "ASP-rgcomma-add6",
            "type": "String"
        },
        "IotHubs_ioh_dd_comma_test_name": {
            "defaultValue": "ioh-dd-comma-test",
            "type": "String"
        },
        "components_ai_dd_cs_test_name": {
            "defaultValue": "ai-dd-cs-test",
            "type": "String"
        },
        "storageAccounts_stoddcstest_name": {
            "defaultValue": "stoddcstest",
            "type": "String"
        },
        "storageAccounts_stoddcsarchivetest_name": {
            "defaultValue": "stoddcsarchivetest",
            "type": "String"
        },
        "streamingjobs_sana_dd_comma_test_name": {
            "defaultValue": "sana-dd-comma-test",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___ai_dd_cs_test_name": {
            "defaultValue": "failure anomalies - ai-dd-cs-test",
            "type": "String"
        },
        "actiongroups_application_20insights_20smart_20detection_externalid": {
            "defaultValue": "/subscriptions/c764670f-e928-42c2-86c1-e984e524018a/resourceGroups/rg-comma/providers/microsoft.insights/actiongroups/application%20insights%20smart%20detection",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2019-11-04",
            "name": "[parameters('IotHubs_ioh_dd_comma_test_name')]",
            "location": "westeurope",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "capacity": 1
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 2
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {
                    "$default": {
                        "sasTtlAsIso8601": "PT1H",
                        "connectionString": "[parameters('IotHubs_ioh_dd_comma_test_connectionString')]",
                        "containerName": "[parameters('IotHubs_ioh_dd_comma_test_containerName')]"
                    }
                },
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[parameters('components_ai_dd_cs_test_name')]",
            "location": "westeurope",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_stoddcsarchivetest_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_stoddcstest_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "largeFileSharesState": "Disabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Cool"
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "apiVersion": "2016-03-01",
            "name": "[parameters('streamingjobs_sana_dd_comma_test_name')]",
            "location": "West Europe",
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "outputStartMode": "JobStartTime",
                "outputStartTime": "2020-02-04T07:46:37.62Z",
                "eventsOutOfOrderPolicy": "Adjust",
                "outputErrorPolicy": "Stop",
                "eventsOutOfOrderMaxDelayInSeconds": 0,
                "eventsLateArrivalMaxDelayInSeconds": 5,
                "dataLocale": "en-US",
                "compatibilityLevel": "1.1"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "westeurope",
            "properties": {
                "displayName": "Blob-Connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/c764670f-e928-42c2-86c1-e984e524018a/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_name')]",
            "location": "westeurope",
            "properties": {
                "displayName": "alexander.schmidt@devdeer.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/c764670f-e928-42c2-86c1-e984e524018a/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_office365_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_ASP_rgcomma_add6_name')]",
            "location": "West Europe",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___ai_dd_cs_test_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ai_dd_cs_test_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a href=\\\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a href=\\\"https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ],
                    "imagePaths": [
                        "https://globalsmartdetectors.blob.core.windows.net/detectors/FailureAnomaliesDetector/v0.18/FailureAnomaly.png"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_ai_dd_cs_test_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[parameters('actiongroups_application_20insights_20smart_20detection_externalid')]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcsarchivetest_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcsarchivetest_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcsarchivetest_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcsarchivetest_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/functions",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/checkValidity')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "type": "Scalar",
                "properties": {
                    "inputs": [
                        {
                            "dataType": "any"
                        },
                        {
                            "dataType": "any"
                        },
                        {
                            "dataType": "any"
                        },
                        {
                            "dataType": "any"
                        }
                    ],
                    "output": {
                        "dataType": "bigint"
                    },
                    "binding": {
                        "type": "Microsoft.StreamAnalytics/JavascriptUdf",
                        "properties": {
                            "script": "// Retrieves 1 if the input is valid otherwise 0\nfunction main(temperature, humidity, windDirection, windSpeed) {\n    return (temperature < -50 || temperature > 50) ? 0 : 1;\n}"
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/inputHub')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "type": "Stream",
                "datasource": {
                    "type": "Microsoft.Devices/IotHubs",
                    "properties": {
                        "iotHubNamespace": "ioh-dd-comma-test",
                        "sharedAccessPolicyName": "iothubowner",
                        "endpoint": "messages/events",
                        "consumerGroupName": "$Default"
                    }
                },
                "compression": {
                    "type": "None"
                },
                "partitionKey": "",
                "serialization": {
                    "type": "Json",
                    "properties": {
                        "encoding": "UTF8"
                    }
                },
                "etag": "d500c2e9-c3d4-4219-96bd-4d0b9b884edf"
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/outputDataLake')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "datasource": {
                    "type": "Microsoft.Storage/Blob",
                    "properties": {
                        "blobPathPrefix": "telemetry/{date}",
                        "storageAccounts": [
                            {
                                "accountName": "stoddcsarchivetest"
                            }
                        ],
                        "container": "all",
                        "pathPattern": "telemetry/{date}",
                        "dateFormat": "yyyy-MM-dd",
                        "timeFormat": "HH",
                        "authenticationMode": "ConnectionString"
                    }
                },
                "serialization": {
                    "type": "Csv",
                    "properties": {
                        "fieldDelimiter": ";",
                        "encoding": "UTF8"
                    }
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/outputErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "datasource": {
                    "type": "Microsoft.Storage/Table",
                    "properties": {
                        "accountName": "stoddcstest",
                        "table": "errors",
                        "partitionKey": "DeviceId",
                        "rowKey": "Id",
                        "columnsToRemove": null,
                        "batchSize": 1
                    }
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/outputFunction')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "datasource": {
                    "type": "Microsoft.AzureFunction",
                    "properties": {
                        "functionAppName": "fapp-dd-cs-test",
                        "functionName": "HttpTrigger1",
                        "apiKey": null,
                        "maxBatchSize": 256000,
                        "maxBatchCount": 100
                    }
                }
            }
        },
        {
            "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
            "apiVersion": "2016-03-01",
            "name": "[concat(parameters('streamingjobs_sana_dd_comma_test_name'), '/outputTable')]",
            "dependsOn": [
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('streamingjobs_sana_dd_comma_test_name'))]"
            ],
            "properties": {
                "datasource": {
                    "type": "Microsoft.Storage/Table",
                    "properties": {
                        "accountName": "stoddcstest",
                        "table": "telemetry",
                        "partitionKey": "DeviceId",
                        "rowKey": "Id",
                        "columnsToRemove": null,
                        "batchSize": 1
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_fapp_dd_cs_test_name')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgcomma_add6_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_fapp_dd_cs_test_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_fapp_dd_cs_test_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_rgcomma_add6_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fapp_dd_cs_test_name'), '/web')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fapp_dd_cs_test_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$fapp-dd-cs-test",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fapp_dd_cs_test_name'), '/HttpTrigger1')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fapp_dd_cs_test_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://fapp-dd-cs-test.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/",
                "script_href": "https://fapp-dd-cs-test.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/run.csx",
                "config_href": "https://fapp-dd-cs-test.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/function.json",
                "href": "https://fapp-dd-cs-test.azurewebsites.net/admin/functions/HttpTrigger1",
                "config": {},
                "test_data": "{\"method\":\"post\",\"body\":\"[{\\r\\n    \\\"deviceId\\\": \\\"TEST\\\"\\r\\n}]\",\"queryStringParams\":[],\"headers\":[]}"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_fapp_dd_cs_test_name'), '/', parameters('sites_fapp_dd_cs_test_name'), '.azurewebsites.net')]",
            "location": "West Europe",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_fapp_dd_cs_test_name'))]"
            ],
            "properties": {
                "siteName": "fapp-dd-cs-test",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_lapp_dd_cs_test_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1,
                                "schedule": {
                                    "hours": [
                                        "0"
                                    ],
                                    "minutes": [
                                        0
                                    ]
                                },
                                "timeZone": "W. Europe Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "ComposeToString": {
                            "runAfter": {
                                "Get_blob_content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "@base64ToString(body('Get_blob_content').$content)"
                        },
                        "Get_blob_content": {
                            "runAfter": {},
                            "metadata": {
                                "JTJmc3RhdHMlMmZzdGF0cy5qc29u": "/stats/stats.json"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('JTJmc3RhdHMlMmZzdGF0cy5qc29u'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "ComposeToString": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@outputs('ComposeToString')",
                                "schema": {
                                    "properties": {
                                        "DeviceErrors": {
                                            "items": {
                                                "properties": {
                                                    "DeviceId": {
                                                        "type": "string"
                                                    },
                                                    "ErrorsCount": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "DeviceId",
                                                    "ErrorsCount"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "MessageCount": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Body": "<p>@{body('Parse_JSON')?['MessageCount']}&nbsp;@{body('Parse_JSON')?['MessageCount']}</p>",
                                    "Subject": "New statistics",
                                    "To": "alexander.schmidt@devdeer.com"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/c764670f-e928-42c2-86c1-e984e524018a/providers/Microsoft.Web/locations/westeurope/managedApis/azureblob"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/c764670f-e928-42c2-86c1-e984e524018a/providers/Microsoft.Web/locations/westeurope/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcsarchivetest_name'), '/default/all')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcsarchivetest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcsarchivetest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/azureappservice-run-from-package')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/exchange')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/scm-releases')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_stoddcstest_name'), '/default/fapp-dd-cs-testa445')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_stoddcstest_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_stoddcstest_name'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        }
    ]
}