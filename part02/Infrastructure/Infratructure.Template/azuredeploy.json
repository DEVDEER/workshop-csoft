{
  "$schema":
    "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LogicAppStorageConnectionName": {
      "defaultValue": "azureblob",
      "type": "String"
    },
    "LogicAppOffice365ConnectionName": {
      "defaultValue": "office365",
      "type": "String"
    },
    "LogicAppOffice365ConnectionDisplayName": {
      "type": "string"
    },
    "FunctionAppName": {
      "defaultValue": "fapp-dd-cs-test",
      "type": "String"
    },
    "LogicAppName": {
      "defaultValue": "lapp-dd-cs-test",
      "type": "String"
    },
    "FunctionAppServicePlanName": {
      "defaultValue": "ASP-rgcomma-add6",
      "type": "String"
    },
    "IotHubName": {
      "defaultValue": "ioh-dd-comma-test",
      "type": "String"
    },
    "ApplicationInsightsName": {
      "defaultValue": "ai-dd-cs-test",
      "type": "String"
    },
    "StorageAccountName": {
      "defaultValue": "stoddcstest",
      "type": "String"
    },
    "ArchiveStorageAccountName": {
      "defaultValue": "stoddcsarchivetest",
      "type": "String"
    },
    "StreamAnalyticsJobName": {
      "defaultValue": "sana-dd-comma-test",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2019-11-04",
      "name": "[parameters('IotHubName')]",
      "location": "westeurope",
      "sku": {
        "name": "S1",
        "tier": "Basic",
        "capacity": 1
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[parameters('ApplicationInsightsName')]",
      "location": "westeurope",
      "kind": "web"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('ArchiveStorageAccountName')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "largeFileSharesState": "Disabled",
        "isHnsEnabled": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('StorageAccountName')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "largeFileSharesState": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Cool"
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('StreamAnalyticsJobName')]",
      "location": "West Europe",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "eventsOutOfOrderPolicy": "Adjust",
        "outputErrorPolicy": "Stop",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "compatibilityLevel": "1.1"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('LogicAppStorageConnectionName')]",
      "location": "westeurope",
      "properties": {
        "displayName": "Blob-Connection",
        "customParameterValues": {},
        "api": {
          "id":
            "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('LogicAppStorageConnectionName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('LogicAppOffice365ConnectionName')]",
      "location": "westeurope",
      "properties": {
        "displayName": "[parameters('LogicAppOffice365ConnectionDisplayName')]",
        "customParameterValues": {},
        "api": {
          "id":
            "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('LogicAppOffice365ConnectionName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('FunctionAppServicePlanName')]",
      "location": "West Europe",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('ArchiveStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('ArchiveStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('ArchiveStorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('ArchiveStorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/functions",
      "apiVersion": "2016-03-01",
      "name":
        "[concat(parameters('StreamAnalyticsJobName'), '/checkValidity')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "type": "Scalar",
        "properties": {
          "inputs": [
            {
              "dataType": "bigint"
            },
            {
              "dataType": "bigint"
            },
            {
              "dataType": "bigint"
            },
            {
              "dataType": "bigint"
            }
          ],
          "output": {
            "dataType": "bigint"
          },
          "binding": {
            "type": "Microsoft.StreamAnalytics/JavascriptUdf",
            "properties": {
              "script":
                "// Retrieves 1 if the input is valid otherwise 0\nfunction main(temperature, humidity, windDirection, windSpeed) {\n    return (temperature < -50 || temperature > 50) ? 0 : 1;\n}"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/inputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('StreamAnalyticsJobName'), '/inputHub')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "type": "Stream",
        "datasource": {
          "type": "Microsoft.Devices/IotHubs",
          "properties": {
            "iotHubNamespace": "[parameters('IotHubName')]",
            "sharedAccessPolicyName": "iothubowner",
            "endpoint": "messages/events",
            "consumerGroupName": "$Default"
          }
        },
        "compression": {
          "type": "None"
        },
        "partitionKey": "",
        "serialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name":
        "[concat(parameters('StreamAnalyticsJobName'), '/outputDataLake')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Blob",
          "properties": {
            "blobPathPrefix": "telemetry/{date}",
            "storageAccounts": [
              {
                "accountName": "[parameters('ArchiveStorageAccountName')]"
              }
            ],
            "container": "all",
            "pathPattern": "telemetry/{date}",
            "dateFormat": "yyyy-MM-dd",
            "timeFormat": "HH",
            "authenticationMode": "ConnectionString"
          }
        },
        "serialization": {
          "type": "Csv",
          "properties": {
            "fieldDelimiter": ";",
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('StreamAnalyticsJobName'), '/outputErrors')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Table",
          "properties": {
            "accountName": "stoddcstest",
            "table": "errors",
            "partitionKey": "DeviceId",
            "rowKey": "Id",
            "batchSize": 1
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name":
        "[concat(parameters('StreamAnalyticsJobName'), '/outputFunction')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.AzureFunction",
          "properties": {
            "functionAppName": "fapp-dd-cs-test",
            "functionName": "HttpTrigger1",
            "apiKey": null,
            "maxBatchSize": 256000,
            "maxBatchCount": 100
          }
        }
      }
    },
    {
      "type": "Microsoft.StreamAnalytics/streamingjobs/outputs",
      "apiVersion": "2016-03-01",
      "name": "[concat(parameters('StreamAnalyticsJobName'), '/outputTable')]",
      "dependsOn": [
        "[resourceId('Microsoft.StreamAnalytics/streamingjobs', parameters('StreamAnalyticsJobName'))]"
      ],
      "properties": {
        "datasource": {
          "type": "Microsoft.Storage/Table",
          "properties": {
            "accountName": "stoddcstest",
            "table": "telemetry",
            "partitionKey": "DeviceId",
            "rowKey": "Id",
            "batchSize": 1
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('FunctionAppName')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionAppServicePlanName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name":
              "[concat(parameters('FunctionAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name":
              "[concat(parameters('FunctionAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId":
          "[resourceId('Microsoft.Web/serverfarms', parameters('FunctionAppServicePlanName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('FunctionAppName'), '/web')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$fapp-dd-cs-test",
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 1,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0
      }
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('FunctionAppName'), '/HttpTrigger1')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionAppName'))]"
      ],
      "properties": {
        "script_root_path_href":
          "[concat('https://', parameters('FunctionAppName'),'.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/')]",
        "script_href":
          "[concat('https://', parameters('FunctionAppName'), '.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/run.csx')]",
        "config_href":
          "[concat('https://', parameters('FunctionAppName'), '.azurewebsites.net/admin/vfs/site/wwwroot/HttpTrigger1/function.json')]",
        "href":
          "[concat('https://', parameters('FunctionAppName'), '.azurewebsites.net/admin/functions/HttpTrigger1')]",
        "config": {},
        "test_data":
          "{\"method\":\"post\",\"body\":\"[{\\r\\n    \\\"deviceId\\\": \\\"TEST\\\"\\r\\n}]\",\"queryStringParams\":[],\"headers\":[]}"
      }
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2018-11-01",
      "name":
        "[concat(parameters('FunctionAppName'), '/', parameters('FunctionAppName'), '.azurewebsites.net')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('FunctionAppName'))]"
      ],
      "properties": {
        "siteName": "[parameters('FunctionAppName')]",
        "hostNameType": "Verified"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('LogicAppName')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('LogicAppStorageConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', parameters('LogicAppOffice365ConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema":
            "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "schedule": {
                  "hours": [
                    "0"
                  ],
                  "minutes": [
                    0
                  ]
                },
                "timeZone": "W. Europe Standard Time"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "ComposeToString": {
              "runAfter": {
                "Get_blob_content": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@base64ToString(body('Get_blob_content').$content)"
            },
            "Get_blob_content": {
              "runAfter": {},
              "metadata": {
                "JTJmc3RhdHMlMmZzdGF0cy5qc29u": "/stats/stats.json"
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name":
                      "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path":
                  "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('JTJmc3RhdHMlMmZzdGF0cy5qc29u'))}/content",
                "queries": {
                  "inferContentType": true
                }
              }
            },
            "Parse_JSON": {
              "runAfter": {
                "ComposeToString": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson",
              "inputs": {
                "content": "@outputs('ComposeToString')",
                "schema": {
                  "properties": {
                    "DeviceErrors": {
                      "items": {
                        "properties": {
                          "DeviceId": {
                            "type": "string"
                          },
                          "ErrorsCount": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "DeviceId",
                          "ErrorsCount"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "MessageCount": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "Send_an_email_(V2)": {
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "Body":
                    "<p>@{body('Parse_JSON')?['MessageCount']}&nbsp;@{body('Parse_JSON')?['MessageCount']}</p>",
                  "Subject": "New statistics",
                  "To": "alexander.schmidt@devdeer.com"
                },
                "host": {
                  "connection": {
                    "name":
                      "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/Mail"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId":
                  "[resourceId('Microsoft.Web/connections', parameters('LogicAppStorageConnectionName'))]",
                "connectionName": "azureblob",
                "id":
                  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/azureblob')]"
              },
              "office365": {
                "connectionId":
                  "[resourceId('Microsoft.Web/connections', parameters('LogicAppOffice365ConnectionName'))]",
                "connectionName": "office365",
                "id":
                  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/westeurope/managedApis/office365')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('ArchiveStorageAccountName'), '/default/all')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('ArchiveStorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('ArchiveStorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('StorageAccountName'), '/default/azureappservice-run-from-package')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('StorageAccountName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('StorageAccountName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/exchange')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('StorageAccountName'), '/default/scm-releases')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('StorageAccountName'), '/default/stats')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name":
        "[concat(parameters('StorageAccountName'), '/default/fapp-dd-cs-testa445')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    }
  ]
}